# Include shared CI
include:
    - project: "epi2melabs/ci-templates"
      file: "wf-containers.yaml"

variables:
    # We'll use the single-file case for these runs
    NF_WORKFLOW_OPTS: "--ubam test_data/ubam --ref_host test_data/grch38_chr19_22.fa.gz --ref_helper test_data/helper_plasmid_pAdDeltaF6.fasta --ref_rep_cap test_data/AAV1_rep_cap_plasmid_jan23.fasta --ref_transgene_plasmid --transgene_annotation test_data/AAV8.bed --ref_transgene_plasmid test_data/AAV8_transgene_fixed_ITR1_no_3bp_del.fasta --mapping_threads 4"
    CI_FLAVOUR: "new" # set to "classic" for old-style CI

# Remove this block in downstream templates
singularity-run:
    tags: [] # no need for big ram
# end


docker-run:

    # Remove this directive in downstream templates
    tags: [] # no need for big ram

    # Define a 1D job matrix to inject a variable named MATRIX_NAME into
    #   the CI environment, we can use the value of MATRIX_NAME to determine
    #   which options to apply as part of the rules block below
    # NOTE There is a slightly cleaner way to define this matrix to include
    #   the variables, but it is broken when using long strings! See CW-756
    parallel:
        matrix:
            - MATRIX_NAME: [
                "fastq_input", "ubam_input"
                ]
    rules:
        # NOTE As we're overriding the rules block for the included docker-run
        #   we must redefine this CI_COMMIT_BRANCH rule to prevent docker-run
        #   being incorrectly scheduled for "detached merge request pipelines" etc.
        - if: ($CI_COMMIT_BRANCH == null || $CI_COMMIT_BRANCH == "dev-template")
          when: never
        - if: $MATRIX_NAME == "fastq_input"
          variables:
              NF_WORKFLOW_OPTS: "--fastq test_data/fastq --ref_host test_data/grch38_chr19_22.fa.gz --ref_helper test_data/helper_plasmid_pAdDeltaF6.fasta --ref_rep_cap test_data/AAV1_rep_cap_plasmid_jan23.fasta --ref_transgene_plasmid --transgene_annotation test_data/AAV8.bed --ref_transgene_plasmid test_data/AAV8_transgene_fixed_ITR1_no_3bp_del.fasta --mapping_threads 4"
        - if: $MATRIX_NAME == "ubam_input"
          variables:
            NF_WORKFLOW_OPTS: "--ubam test_data/ubam --ref_host test_data/grch38_chr19_22.fa.gz --ref_helper test_data/helper_plasmid_pAdDeltaF6.fasta --ref_rep_cap test_data/AAV1_rep_cap_plasmid_jan23.fasta --ref_transgene_plasmid --transgene_annotation test_data/AAV8.bed --ref_transgene_plasmid test_data/AAV8_transgene_fixed_ITR1_no_3bp_del.fasta --mapping_threads 4"
