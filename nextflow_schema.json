{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-aav-qc",
    "description": "Nextflow workflow for AAV vector quality control.",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-aav-qc/wf-aav-qc-demo.tar.gz",
    "url": "https://github.com/epi2me-labs/wf-aav-qc",
    "type": "object",
    "definitions": {
        "input": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-right",
            "description": "Parameters for finding and handling input data for analysis.",
            "properties": {
                "ubam": {
                    "title": "UBAM input",
                    "type": "string",
                    "format": "file-path",
                    "description": "An unaligned bam file containing reads from a AAV QC sequencing run.",
                    "help_text": "This accepts one of three cases: (i) the path to a single BAM file; (ii) the path to a top-level directory containing BAM files; (iii) the path to a directory containing one level of sub-directories which in turn contain BAM files. In the first and second case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes. In this case, a sample sheet can be provided with `--sample_sheet`."
                },
                "fastq": {
                    "title": "FASTQ input",
                    "type": "string",
                    "format": "path",
                    "description": "FASTQ files containing reads from a AAV QC sequencing run.",
                    "help_text": "This accepts one of three cases: (i) the path to a single FASTQ file; (ii) the path to a top-level directory containing FASTQ files; (iii) the path to a directory containing one level of sub-directories which in turn contain FASTQ files. In the first and second case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes. In this case, a sample sheet can be provided with `--sample_sheet`."
                },
                "ref_host": {
                    "title": "Host reference",
                    "type": "string",
                    "format": "file-path",
                    "Description": "The reference fasta file for the host organism."
                },
                "ref_helper": {
                    "title": "Helper plasmid",
                    "type": "string",
                    "format": "file-path",
                    "Description": "The helper plasmid fasta file."
                },
                "ref_rep_cap": {
                    "title": "Rep/cap plasmid",
                    "type": "string",
                    "format": "file-path",
                    "Description": "The rep/cap plasmid fasta file."
                },
                "ref_transgene_plasmid": {
                    "title": "Trangene plasmid",
                    "type": "string",
                    "format": "file-path",
                    "Description": "The transgene plasmid fasta file."
                },
                "transgene_annotation": {
                    "title": "Trangene plasmid annotation file.",
                    "type": "string",
                    "format": "file-path",
                    "Description": "The transgene plasmid annotation file in bed format."
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "default": false,
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                },
                "basecaller_cfg": {
                    "title": "Basecaller config",
                    "type": "string",
                    "description": "Name of the model to use for converting signal and selecting a small variant calling model.",
                    "help_text": "Required for basecalling and small variant calling. The basecaller configuration is used to automatically select the appropriate small variant calling model. Refer to the [model table on the Dorado repository for selecting a simplex basecalling model](https://github.com/nanoporetech/dorado#available-basecalling-models).",
                    "default": "dna_r10.4.1_e8.2_400bps_sup@v3.5.2"
                },
                "clair3_model_path": {
                    "title": "Clair3 model",
                    "type": "string",
                    "format": "directory-path",
                    "description": "Clair3 model directory.",
                    "help_text": "The workflow will attempt to map the basecalling model used to a suitable Clair3 model. You can override this by providing the path to a model with this option instead. Models can be obtained from [this page](https://cdn.oxfordnanoportal.com/software/analysis/models/clair3/index.html).",
                    "hidden": true
                }
            },
            "allOf": [
                {
                    "required": [
                        "ref_host",
                        "ref_helper",
                        "ref_rep_cap",
                        "ref_transgene_plasmid",
                        "transgene_annotation"
                    ]
                },
                {
                    "oneOf": [
                        {
                            "required": [
                                "fastq"
                            ]
                        },
                        {
                            "required": [
                                "ubam"
                            ]
                        }
                    ]
                },
                {
                    "oneOf": [
                        {
                            "required": [
                                "basecaller_cfg"
                            ]
                        },
                        {
                            "required": [
                                "clair3_model_path"
                            ]
                        }
                    ]
                }
            ]
        },
        "samples": {
            "title": "Sample Options",
            "type": "object",
            "fa_icon": "fas fa-vials",
            "description": "Parameters that relate to samples such as sample sheets and sample names.",
            "properties": {
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A CSV file used to map barcodes to sample aliases. The sample sheet can be provided when the input data is a directory containing sub-directories with FASTQ files.",
                    "help_text": "The sample sheet is a CSV file with, minimally, columns named `barcode` and `alias`. Extra columns are allowed. A `type` column is required for certain workflows and should have the following values; `test_sample`, `positive_control`, `negative_control`, `no_template_control`."
                },
                "sample": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
                }
            }
        },
        "output": {
            "title": "Output Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-left",
            "description": "Parameters for saving and naming workflow outputs.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all workflow results."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced Options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Advanced options for configuring processes inside the workflow.",
            "help_text": "These advanced options do not need to be changed for typical use, but allow fine tuning of workflows for users who want more control over the workflow.",
            "properties": {}
        },
        "misc": {
            "title": "Miscellaneous Options",
            "type": "object",
            "description": "Everything else.",
            "default": "",
            "properties": {
                "mapping_threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Maximum number of CPU threads to use for the minimap2 mapping stage.",
                    "help_text": "A minimap2 process per sample will be will be run. This setting appllies a maximum number of threads to be used for each of these."
                },
                "threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Maximum number of CPU threads to for reading fastq/ubam and generating reda stats.",
                    "hidden": true
                },
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input"
        },
        {
            "$ref": "#/definitions/samples"
        },
        {
            "$ref": "#/definitions/output"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/misc"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis workflow generates a reference geneome which contains the following\n* Host reference genome (--ref_host) \n* Transgene plasmid (--transgene_plasmid)\n* AAV helper plasmid (--ref_helper)\n* AAV rep-cap (--ref_rep_cap)\n\nThe transgene plasmid ITR regions can exist in one of four orientations \n(FLIP/FLOP, FLOP/FLIP, FLIP/FLIP, or FLOP/FLOP) (refernce). Each of these four orientations are generated from the\ngiven transgene plasmid sequence and added to the combined reference.\n\nReads are mapped to the combined reference using [minimap2](https://github.com/lh3/minimap2) and alignment \nstatistics are then generated using [seqkit](https://bioinf.shenwei.me/seqkit/), \nwhich are used in the rest of the workflow.\n\nConsensus sequence(s) are made using [clair3](https://github.com/HKU-BAL/Clair3) to generate VCF\nvariant files from which [bcftools](https://samtools.github.io/bcftools/bcftools.html) creates a consensus sequence. \n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [singularity](https://docs.sylabs.io/guides/latest/user-guide/)\n"
    }
}